/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.buw.se;

import java.util.Scanner;

public class AppCLI  {


    
    // Method to clear the console screen generated by ChatGPT
    public static void clearScreen() {
        System.out.print("\033[H\033[2J"); // ANSI escape sequence to clear screen
        System.out.flush();
    }


    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int command = 1;
        

        while (command != 0) {

           clearScreen(); // Clear the screen before displaying the menu

            switch (command) {
                case 1:
                    //Read the balance from CSV file
                    System.out.println("Your balance is : $"+DataStoreCsv.readBalance());
                    break;
                case 2:

                    System.out.println("Please enter the amount you want to add to account: ");
                    String moneyAdded = scanner.nextLine();
                    
                    

                    try{   
                        // throw an error if the number is negative
                        if (Double.parseDouble(moneyAdded) < 0) {
                            throw new IllegalArgumentException("Error: Amount cannot be negative.");
                        }
                        //Add money to balance by using modifyBalance method with user input

                    DataStoreCsv.modifyBalance(moneyAdded);
                    System.out.println("You added : $" + moneyAdded );
                    break;

                    }catch(NumberFormatException e){
                        System.out.println("Invalid input. Please enter a valid number.");
                    }catch (IllegalArgumentException ex) {
                        // display prompt when input is negative 
                        System.out.println(ex.getMessage());
                         
                    }break;

                    
                            
                case 3:
                    System.out.println("Please enter the amount you want to withdraw from account: ");
                    String moneyWithdraw = scanner.nextLine();
                    
                    


                    try{
                        // throw an error if the number is negative
                        if (Double.parseDouble(moneyWithdraw) < 0) {
                            throw new IllegalArgumentException("Error: Amount cannot be negative.");
                        }
                        //Convert the user input to double to compare that to the balance
                        double amountToWithdraw = Double.parseDouble(moneyWithdraw);
                        double balance = DataStoreCsv.readBalance();
                        if (amountToWithdraw > balance) {
                            System.out.println("You can't withdraw $"+amountToWithdraw+" from your account! Your balance is only: $"+balance);
                            
                        }else {
                            //Add the input of user in modifyBalance method as a negative
                            DataStoreCsv.modifyBalance(String.valueOf((-Double.parseDouble(moneyWithdraw))));

                            System.out.println("You withdraw : $" + moneyWithdraw );
                            break;
                        }
                    }catch (NumberFormatException e) {

                        System.out.println("Invalid input. Please enter a valid number.");
                    }catch (IllegalArgumentException ex) {
                    // display prompt when input is negative 
                    System.out.println(ex.getMessage());
                     }
                    break;

                    
                default:
                    System.out.println("Unknown command " + command);
                    break;
            }

            System.out.println("Please enter next command (0 - quit, 1 - Balance, 2 - Add Money, 3 - Withdraw):");
            try{
                command = Integer.parseInt(scanner.nextLine());

            }catch(NumberFormatException N){
                System.out.println("Looks like you pressed a wrong command. Try again in 3 seconds!");
                try {//This try catch is generated by ChatGpt
                    // Pause the program for 3 seconds (3000 milliseconds)
                    Thread.sleep(3000);
                } catch (InterruptedException e) {
                    // Handle interrupted exception if necessary
                    e.printStackTrace();
                }

            }
            
        }

        scanner.close();
    }
}